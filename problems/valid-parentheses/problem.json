{
  "slug": "valid-parentheses",
  "title": "Valid Parentheses",
  "difficulty": "Easy",
  "tags": ["String", "Stack"],
  "statement_md": "# Valid Parentheses\n\nGiven a string `s` containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['` and `']'`, determine if the input string is valid.\n\nAn input string is valid if:\n\n1. Open brackets must be closed by the same type of brackets.\n2. Open brackets must be closed in the correct order.\n3. Every close bracket has a corresponding open bracket of the same type.\n\n## Example 1:\n\n**Input:** s = \"()\"  \n**Output:** true\n\n## Example 2:\n\n**Input:** s = \"()[]{}\"  \n**Output:** true\n\n## Example 3:\n\n**Input:** s = \"(]\"  \n**Output:** false\n\n## Constraints:\n\n- 1 <= s.length <= 10^4\n- s consists of parentheses only '()[]{}'.",
  "examples": [
    {
      "in": "()",
      "out": "true"
    },
    {
      "in": "()[]{}",
      "out": "true"
    },
    {
      "in": "(]",
      "out": "false"
    }
  ],
  "constraints": [
    {
      "name": "string_length",
      "min": 1,
      "max": 10000,
      "desc": "Length of the input string"
    }
  ],
  "time_limit": 1.0,
  "memory_limit": 256,
  "languages": ["py", "cpp", "c", "js", "java"]
}
