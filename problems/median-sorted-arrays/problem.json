{
  "slug": "median-sorted-arrays",
  "title": "Median of Two Sorted Arrays",
  "difficulty": "Hard",
  "tags": ["Array", "Binary Search", "Divide and Conquer"],
  "statement_md": "# Median of Two Sorted Arrays\n\nGiven two sorted arrays `nums1` and `nums2` of size `m` and `n` respectively, return **the median** of the two sorted arrays.\n\nThe overall run time complexity should be `O(log (m+n))`.\n\n## Example 1:\n\n**Input:** nums1 = [1,3], nums2 = [2]  \n**Output:** 2.00000  \n**Explanation:** merged array = [1,2,3] and median is 2.\n\n## Example 2:\n\n**Input:** nums1 = [1,2], nums2 = [3,4]  \n**Output:** 2.50000  \n**Explanation:** merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n\n## Constraints:\n\n- nums1.length == m\n- nums2.length == n\n- 0 <= m <= 1000\n- 0 <= n <= 1000\n- 1 <= m + n <= 2000\n- -10^6 <= nums1[i], nums2[i] <= 10^6",
  "examples": [
    {
      "in": "2\n1 3\n1\n2",
      "out": "2.00000"
    },
    {
      "in": "2\n1 2\n2\n3 4",
      "out": "2.50000"
    }
  ],
  "constraints": [
    {
      "name": "array1_length",
      "min": 0,
      "max": 1000,
      "desc": "Length of first array"
    },
    {
      "name": "array2_length",
      "min": 0,
      "max": 1000,
      "desc": "Length of second array"
    },
    {
      "name": "element_value",
      "min": -1000000,
      "max": 1000000,
      "desc": "Value of array elements"
    }
  ],
  "time_limit": 1.0,
  "memory_limit": 256,
  "languages": ["py", "cpp", "c", "js", "java"]
}
