{
  "slug": "longest-substring",
  "title": "Longest Substring Without Repeating Characters",
  "difficulty": "Medium",
  "tags": ["Hash Table", "String", "Sliding Window"],
  "statement_md": "# Longest Substring Without Repeating Characters\n\nGiven a string `s`, find the length of the **longest substring** without repeating characters.\n\n## Example 1:\n\n**Input:** s = \"abcabcbb\"  \n**Output:** 3  \n**Explanation:** The answer is \"abc\", with the length of 3.\n\n## Example 2:\n\n**Input:** s = \"bbbbb\"  \n**Output:** 1  \n**Explanation:** The answer is \"b\", with the length of 1.\n\n## Example 3:\n\n**Input:** s = \"pwwkew\"  \n**Output:** 3  \n**Explanation:** The answer is \"wke\", with the length of 3.\n\nNotice that the answer must be a **substring**, \"pwke\" is a subsequence and not a substring.\n\n## Constraints:\n\n- 0 <= s.length <= 5 * 10^4\n- s consists of English letters, digits, symbols and spaces.",
  "examples": [
    {
      "in": "abcabcbb",
      "out": "3"
    },
    {
      "in": "bbbbb",
      "out": "1"
    },
    {
      "in": "pwwkew",
      "out": "3"
    }
  ],
  "constraints": [
    {
      "name": "string_length",
      "min": 0,
      "max": 50000,
      "desc": "Length of the input string"
    }
  ],
  "time_limit": 1.0,
  "memory_limit": 256,
  "languages": ["py", "cpp", "c", "js", "java"]
}
